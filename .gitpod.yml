image:
  file: Dockerfile

tasks:
  - name: Setup Windsurf Environment
    init: |
      # Ensure data directory exists with proper Linux paths
      mkdir -p /workspace/app/data
      # Copy dataset with error handling (Linux paths)
      cp -f /app/data/dataset.csv /workspace/app/data/ 2>/dev/null || echo "Note: Dataset copy failed, will create sample data"
      
      # Create a sample dataset if the real one isn't available
      if [ ! -f /workspace/app/data/dataset.csv ]; then
        echo "Creating sample dataset..."
        python -c "
        import pandas as pd
        import numpy as np
        
        # Create sample data
        np.random.seed(42)
        data = {
            'id': range(1, 1001),
            'value': np.random.randn(1000) * 100,
            'category': np.random.choice(['A', 'B', 'C', 'D'], 1000),
            'timestamp': pd.date_range(start='2025-01-01', periods=1000),
            'status': np.random.choice(['active', 'inactive', 'pending'], 1000)
        }
        
        # Create DataFrame and save to CSV
        df = pd.DataFrame(data)
        df.to_csv('/workspace/app/data/dataset.csv', index=False)
        print('Sample dataset created with 1000 rows and 5 columns')
        "
      fi
      
      echo "Windsurf environment is ready for training!"
    command: |
      echo "Starting Windsurf training environment..."
      
      # Use our mock Windsurf implementation instead
      chmod +x /workspace/windsurf-mock.sh
      
      # Start the mock Windsurf server
      echo "Launching Windsurf training interface..."
      /workspace/windsurf-mock.sh start &
      
      # Wait for the server to be ready
      sleep 3
      
      # Open the browser with the training interface
      gp preview --external $(gp url 3000)

ports:
  - port: 3000
    onOpen: open-preview
    visibility: public
  - port: 8501
    onOpen: ignore
    visibility: public

vscode:
  extensions:
    - ms-python.python
    - ms-toolsai.jupyter